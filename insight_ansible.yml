---

# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you

# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically

# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as

# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is no
t
# responsible for any adverse outcomes related to these recommendations or Playbooks.

#
# insight_ansible

# https://cloud.redhat.com/insights/remediations/ec81e5b6-f889-4b4f-bfa3-e044efb95868

# Generated by Red Hat Insights on Fri, 24 May 2019 18:14:11 GMT


# New Ansible Engine packages are inaccessible when dedicated Ansible repo is not enabled

# Identifier: (advisor:ansible_deprecated_repo|ANSIBLE_DEPRECATED_REPO,fix)

# Version: 6d5af87defecc699f107e4a054df084c94026870

- name: Enable ansible repo and update ansible package

  hosts: "rhel7.sat-server-nyanav.com"

  become: true


  tasks:

    - name: Enable ansible repo

      command: subscription-manager repos --enable=rhel-7-server-ansible-2-rpms


    - name: Update ansible package

      yum:

        name: ansible

        state: latest



# Kernel vulnerable to side-channel attacks in modern microprocessors (CVE-2017-5715&#x2F;Spectre)

# Identifier: (advisor:CVE_2017_5715_cpu_virt|VIRT_CVE_2017_5715_CPU_3_ONLYKERNEL,kernel_update)

# Version: 4a790e0e27660f70dab0bf6572968378e5801b48

- name: Update system to the latest kernel and reboot

  hosts: "rhel7.sat-server-nyanav.com"

  become: true

  vars:

    # determine if we need to update the 'kernel' package or 'kernel-rt' package

    kernel_pkg: "{{'kernel-rt' if 'rt' in ansible_kernel else 'kernel'}}"


  tasks:

    - name: Update kernel

      yum:

        name: "{{kernel_pkg}}"

        state: latest

      register: yum


    - when: yum is changed

      name: set reboot fact

      set_fact:

        insights_needs_reboot: True


    - when: not yum is changed

      # The latest kernel is already installed so boot from it.  Sort the installed kernels

      # by buildtime and select the one with the most recent build time

      block:

      - name: get latest installed {{kernel_pkg}} package version

        shell: rpm -q {{kernel_pkg}} --queryformat="%{buildtime}\t%{version}-%{release}.%{arch}\n" | sort -nr | head -1 | cut -f2

        register: latest_kernel

        check_mode: no


      - name: get configured default kernel

        command: /sbin/grubby --default-kernel

        register: default_kernel

        check_mode: no


      - when: default_kernel.stdout.split('-', 1)[1] != latest_kernel.stdout

        name: set the default kernel to the latest installed

        command: /sbin/grubby --set-default /boot/vmlinuz-{{latest_kernel.stdout}}

        register: grub_change

        check_mode: no


      - when: grub_change is changed

        name: set reboot fact

        set_fact:

          insights_needs_reboot: True



# Kernel vulnerable to side-channel attacks in modern microprocessors (CVE-2017-5753&#x2F;Spectre, CVE-2017-5715&#x2F;Spectre, CVE-2017-5754&#x2F;Meltdown)

# Identifier: (advisor:CVE_2017_5753_4_cpu_kernel|KERNEL_CVE_2017_5753_4_CPU_ERROR_3,kernel_update)

# Version: 4a790e0e27660f70dab0bf6572968378e5801b48

- name: Update system to the latest kernel and reboot

  hosts: "rhel7.sat-server-nyanav.com"

  become: true

  vars:

    # determine if we need to update the 'kernel' package or 'kernel-rt' package

    kernel_pkg: "{{'kernel-rt' if 'rt' in ansible_kernel else 'kernel'}}"


  tasks:

    - name: Update kernel

      yum:

        name: "{{kernel_pkg}}"

        state: latest

      register: yum


    - when: yum is changed

      name: set reboot fact

      set_fact:

        insights_needs_reboot: True


    - when: not yum is changed

      # The latest kernel is already installed so boot from it.  Sort the installed kernels

      # by buildtime and select the one with the most recent build time

      block:

      - name: get latest installed {{kernel_pkg}} package version

        shell: rpm -q {{kernel_pkg}} --queryformat="%{buildtime}\t%{version}-%{release}.%{arch}\n" | sort -nr | head -1 | cut -f2

        register: latest_kernel

        check_mode: no


      - name: get configured default kernel

        command: /sbin/grubby --default-kernel

        register: default_kernel

        check_mode: no


      - when: default_kernel.stdout.split('-', 1)[1] != latest_kernel.stdout

        name: set the default kernel to the latest installed

        command: /sbin/grubby --set-default /boot/vmlinuz-{{latest_kernel.stdout}}

        register: grub_change

        check_mode: no


      - when: grub_change is changed

        name: set reboot fact

        set_fact:

          insights_needs_reboot: True



# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.

# The variable can be overridden to suppress this behavior.

- name: Reboot system (if applicable)

  hosts: "rhel7.sat-server-nyanav.com"

  become: True

  gather_facts: False

  tasks:

    - when:

        - insights_needs_reboot is defined

        - insights_needs_reboot

      block:

        - name: Reboot system

          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"

          async: 1

          poll: 0

          ignore_errors: true


        - name: Wait for system to boot up

          local_action:

            module: wait_for

            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"

            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"

            delay: 15

            search_regex: OpenSSH

            timeout: 300

          become: false


- name: run insights

  hosts: "rhel7.sat-server-nyanav.com"

  become: True

  gather_facts: False

  tasks:

    - name: run insights
      command: insights-client

      changed_when: false